@import './common-variables';

/* 
 * set o classes for grid-base text 
*/
.grid-row {
  display: flex;
  justify-content: center;
  align-items: stretch;
  flex-direction: column;

  @media (min-width: $minMediumDevice) {
    flex-direction: row;
  }
}
.grid-title {
  padding: 10px;
  text-align:center;
  font-weight: $heavyFontWeight;
}
.inner-grid { 
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.inner-grid > .small,
.inner-grid > .tiny,
.inner-grid > .large{
  align-self: center;
  text-align: center;
  padding: 5px;
  width: 100%;
}
.inner-grid > .small {
  font-size: 1em;
}
.inner-grid > .tiny {
  font-size: 0.7em;
}
.inner-grid > .large {
  font-size: 1.5em;
  
  @media (min-width: $minLargeDevice){
    font-size: 2em;
  }
}

@media (min-width: $minMediumDevice){
  [class*='lg-grid-panel'] {
    padding: 5px;
    /* nested flex containers for cross browser (safari doesn't let children of flex use height:100% properly) support */
    display: flex;
    justify-content: stretch;
    align-items: stretch;
  }
  .lg-grid-panel20 {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 20%;
    max-width: 20%;
  }
  .lg-grid-panel30 {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 30%;
    max-width: 30%;
  }
  .lg-grid-panel40 {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 40%;
    max-width: 40%;
  }
  .lg-grid-panel50 {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 50%;
    max-width: 50%;
  }
  .lg-grid-panel70 {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 70%;
    max-width: 70%;
  }
  .lg-grid-panel80 {
    flex-grow:0;
    flex-shrink:0;
    flex-basis: 80%;
    max-width: 80%;
  }
  .lg-grid-panel100 {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 100%;
    max-width: 100%;
  }
  .lg-grid-panel-auto {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: auto;
    width: 100%; /* also really hacky but necessary for IE11 */
    min-width: 0px; /* hacky but necessary to sort of apply min-width: auto */
  }
  .lg-1third {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 33%;
    max-width: 33%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .lg-1half {
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 50%;
    padding-left: 10px;
    padding-right: 10px;
  }
}


.lg-hide {
  @media (min-width: $minMediumDevice){
     width: 0px;
     height: 0px;
     overflow: hidden;
   }
}
.sm-hide {
   display: none;

   @media (min-width: $minMediumDevice){
     display: block;
   }
}

// Grid systems should all be based off min-width breakpoints, for consistency. These are just some minor misc. exceptions to that
@media (max-width: $maxMediumDevice){
  .sm-grid-panel {
    width: 100%;
    padding: 5px;
  }
  .md-clearfix {
    clear: both;
  }
  .sm-full {
    width: 100%;
  }
}

/* .lg-grid > .grid-row > lg-grid-panel30.key_concept_term */

.lg-grid-panel30.key_concept_term {
  width: 100%;
  padding-top: 20px;

  @media (min-width: $minMediumDevice){
    max-width: 29%;
    padding-top: none;
  }
}

.key_concept_term {
  border-bottom: 1px solid $separatorColor;
  display: flex;
  align-items: center;
  padding-left: 10px;
  padding-right: 20px;
  color: $textColor;
  font-weight: $heavyFontWeight;
}

/* .lg-grid > .grid-row > lg-grid-panel70.key_concept_def */
.lg-grid-panel70.key_concept_def {
  width: 100%;

  @media (min-width: $minMediumDevice){
    max-width: 69%;
  }
}

.key_concept_def {
  border-bottom: 1px solid $separatorColor;
  padding: 10px;
  padding-top: 20px;
  background-color: $backgroundColor;
}

.key_concept_header {
  color: $backgroundColor;
  background-color: rgba($secondaryColor, 0.7);
  border: 1px solid rgba($secondaryColor, 0.9);
  text-align: center;
  padding: 10px;
}

.grid-row:last-child > .key_concept_term,
.grid-row:last-child > .key_concept_def {
  border: none;
}
.px-max-lg-0 {
  @media (max-width: $maxMediumDevice){
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}
.pl-min-lg-0 {
  @media (min-width: $minMediumDevice){
    padding-left: 0 !important;
  }
}
.pr-min-lg-0 {
  @media (min-width: $minMediumDevice){
    padding-right: 0 !important;
  }
}